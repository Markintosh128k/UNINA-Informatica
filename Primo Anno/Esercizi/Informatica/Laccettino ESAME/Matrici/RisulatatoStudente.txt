Sia dato un array 2D A di dimensioni MxN, con M pari, A[i,j] rappresenta il risultato dello studente j
ottenuto alla prova i. L’array 1D P (di dimensione M) contiene per ciascuna prova, il punteggio
minimo per il superamento della prova stessa (P(i) è il punteggio minimo per superare la prova i).
Progettare in p like, un algoritmo che restituisca sottoforma di procedure l’array RIS(di dimensione
ovviamente N) che fornisca il punteggio totale ottenuto nelle prove superate se lo studente ha
superato almeno metà della prove, altrimenti restituisca 0. 

procedure risultato(in:a,p,m,n; out:ris)
var: i,j,m,n: integer
var: a[m,n], p[m], ris[n]: array of integer
var: tot, sup: integer

for j:=1 to n do
    tot:=0
    sup:=0

    for i:=1 to m do
        if (a(i,j) >= p(i))
            tot:=tot+a(i,j)
            sup:=sup+1
        endif
    endfor

    if(sup >= m/2)
        ris(j):=tot
    else
        ris(j):=0
    endif
endfor