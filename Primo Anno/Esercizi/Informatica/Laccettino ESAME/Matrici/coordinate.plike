(*Sia dato un array 2D A di dimensioni MxN di tipo integer. Progettare un algoritmo in P-like
sottoforma di procedure (procedure elementi_non_di_bordo) che restituisca in output un array 2D
COORDINATE in cui per ogni riga ci siano le coordinate (i,j) degli elementi non di bordo dell’array A
che hanno come elementi adiacenti (nord, est, sud, ovest ) elementi di valore minore.*)


procedure bordo(a,m,n,coordinate)
    (*
    Dichiarazione delle variabili:
    - `i`: Variabile intera utilizzata come contatore nei cicli.
    - `j`: Variabile intera utilizzata come contatore nei cicli.
    - `k`: Variabile intera utilizzata come contatore nei cicli.
    - `m`: Variabile intera utilizzata per memorizzare un valore specifico.
    - `n`: Variabile intera utilizzata per memorizzare un valore specifico.
    - `array`: Array di interi utilizzato per memorizzare una serie di valori.
    - `k`: Variabile intera utilizzata per memorizzare un valore specifico.
    *)

    var: i, j, k, m, n: integer
    var: a[m,n]m coordinate[k,2]: array of integer
    var: nord,sud,est,ovest: integer 
    k:=1

    for i:= 2 to m - 1 do
        for j:=2 to n-1 do
            (* Meomorizzazione degli elementi adiacenti *)
            nord := a(i-1 ,j)
            sud := a(i+1,j)
            est := a(i, j+1)
            ovest := a(i, j-1)

            (* Verifica se l'elemento corrente è maggiore degli elementi adiacenti *)
            if (a(i,j) > nord AND a(i,j) > sud AND a(i,j) > est AND a(i,j) > ovest)
                (* Memorizza le coordinate dell'elemento non di bordo *)
                coordinate(k,1):=i
                coordinate(k,2):=j 
                (* Incrementa l'indice per le coordinate *)
                k := k+1
            end if
        endfor
    endfor
end procedure
